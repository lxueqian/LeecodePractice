1. 说起数组就要想到： 双指针/额外数组记录 (考虑需不需要排序）
2. 寻找数组中心索引：一般相加为定值的条件的要记得转换成减法的等式判断条件
3. 至少是其他数字两倍的最大数：if all( max>x*2 for x in nums if x!=m)
4. 加一: 
   通过int和str之间的转换求解 .join()
   或者 for i in range(len(digits)-1,-1,-1) 倒序遍历列表 一定要记住这个range里面的规则！！！！ 然后注意空列表和类似[9]的情况，当遍历到列表第一个值
   一定要判断一下还有没有进位（dividee/modee)
5. 对角线遍历
   找规律
6. 最长公共前缀 o(kn) 正常遍历
7. 反转字符串 [::-1]    列表字典字符串的基本方法一定要掌握！！！！！
8. 数组和字符串的双指针技巧！！！
   1) 从两端向中间迭代数组。
      这时你可以使用双指针技巧：一个指针从始端开始，而另一个指针从末端开始。值得注意的是，这种技巧经常在排序数组中使用
   2) 同时有一个慢指针和一个快指针。
      解决这类问题的关键是确定两个指针的移动策略。有时可能需要在使用双指针技巧之前对数组进行排序，也可能需要运用贪心想法来决定你的运动策略。
      例子：给定一个数组和一个值，原地删除该值的所有实例并返回新的长度
           相当于使用了两个指针，一个用于原始数组的迭代，另一个总是指向新数组的最后一个位置
           使用两个指针，一个快指针 i 和一个慢指针 k ，i 每次移动一步，而 k 只在添加新的被需要的值时才移动一步
     
   
